// –º—ã –Ω–µ –º–æ–∂–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∑–∞–¥–∞–≤–∞—Ç—å –Ω–∏–∫–∞–∫–∏–µ –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ import.

// –í–æ-–≤—Ç–æ—Ä—ã—Ö, –º—ã –Ω–µ –º–æ–∂–µ–º –¥–µ–ª–∞—Ç—å –∏–º–ø–æ—Ä—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Å–ª–æ–≤–∏–π –∏–ª–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.

// import(module) –∑–∞–≥—Ä—É–∂–∞–µ—Ç –º–æ–¥—É–ª—å –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–º–∏—Å, —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –∫–æ—Ç–æ—Ä–æ–≥–æ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –æ–±—ä–µ–∫—Ç –º–æ–¥—É–ª—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –≤—Å–µ –µ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç—ã.

// –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –æ–±—ã—á–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö, –æ–Ω –Ω–µ —Ç—Ä–µ–±—É–µ—Ç —É–∫–∞–∑–∞–Ω–∏—è script type="module".

// import() is not a function, it's syntax sugar

let modulePath = prompt("–ö–∞–∫–æ–π –º–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–∞—Ç—å?");

import(modulePath)
  .then(obj => {
    // do smth
  })
  .catch(err => new Error('this module not found'))

// –ò–ª–∏ –µ—Å–ª–∏ –≤–Ω—É—Ç—Ä–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
async function asyncFunction() {
  let module = await import(modulePath)
}


// example 2
// üìÅ say.js
export function hi() {
  alert(`–ü—Ä–∏–≤–µ—Ç`);
}

export function bye() {
  alert(`–ü–æ–∫–∞`);
}

let {hi, bye} = await import('./say.js');

hi();
bye();


// WITH DEFAULT
export default function() {
  alert("Module loaded (export default)!");
}

let obj = await import('./say.js');
let say = obj.default;
// –∏–ª–∏, –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π: let {default: say} = await import('./say.js');

say();
